/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/map_page.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/map_page.js":
/*!****************************!*\
  !*** ./src/js/map_page.js ***!
  \****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scss_map_page_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scss/map_page.scss */ \"./src/scss/map_page.scss\");\n/* harmony import */ var _scss_map_page_scss__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_scss_map_page_scss__WEBPACK_IMPORTED_MODULE_0__);\n\nconsole.log(\"Map page script running\"); //  Get user data from html\n\nvar USER;\nvar isLogged = false;\npassData();\n\nfunction passData() {\n  var user = $(\"#user-data\").data(\"user\");\n\n  if (user) {\n    USER = user;\n    isLogged = true;\n    console.log(\"Logged as: \", USER.username); // console.log(\"user: \",USER)\n  }\n} // Map\n\n\nfunction fromLatLngToPoint(latLng, map) {\n  var topRight = map.getProjection().fromLatLngToPoint(map.getBounds().getNorthEast());\n  var bottomLeft = map.getProjection().fromLatLngToPoint(map.getBounds().getSouthWest());\n  var scale = Math.pow(2, map.getZoom());\n  var worldPoint = map.getProjection().fromLatLngToPoint(latLng);\n  return new google.maps.Point((worldPoint.x - bottomLeft.x) * scale, (worldPoint.y - topRight.y) * scale);\n}\n\nvar map = new google.maps.Map(document.getElementById('map'), {\n  zoom: 10,\n  center: {\n    lat: 38.816670,\n    lng: -9.23333\n  },\n  disableDefaultUI: true\n}); // Heatmap\n\nvar heatmap_data = [new google.maps.LatLng(37.782551, -122.445368), new google.maps.LatLng(37.782745, -122.444586), new google.maps.LatLng(37.782842, -122.443688)];\nvar heatmap = new google.maps.visualization.HeatmapLayer({\n  data: [],\n  map: null\n}); // Places service\n\nvar service = new google.maps.places.PlacesService(map); // Autocomplete\n\nvar ac_service = new google.maps.places.AutocompleteService(); // Geocoder\n\nvar geocoder = new google.maps.Geocoder(); // Infowindow\n\nvar infowindow = new google.maps.InfoWindow({\n  content: 'empty',\n  maxWidth: 400\n});\nvar infowindow_query = new google.maps.InfoWindow(); // Add drop marker (smp o mesmo)\n\nvar add_drop_marker = new google.maps.Marker({\n  position: {\n    lat: 0,\n    lng: 0\n  },\n  map: null,\n  // icon: {url: \"/icons/location-add.svg\", scaledSize: new google.maps.Size(60, 60)},\n  optimized: false,\n  title: \"Add drop here\",\n  zIndex: 5\n});\nvar marker_query = new google.maps.Marker({\n  map: map,\n  position: null\n}); // Click on map to upload\n\nvar map_click_event;\nvar add_drop_iw = $(\"#add-drop-iw\");\nmap.addListener('click', function (e) {\n  // Is a drop's iw open?\n  if (infowindow.map != null) {\n    infowindow.close();\n  } else {\n    // If not ask if you want to add a drop there\n    map_click_event = e;\n    console.log(\"clicked on \", e);\n\n    if (map_click_event.placeId) {\n      add_drop_marker.setMap(null);\n    } else {\n      add_drop_marker.setMap(map);\n      add_drop_marker.setPosition(e.latLng);\n    }\n\n    queryPlace(e);\n    $(\"#input-location\").val(JSON.stringify({\n      lat: e.latLng.lat(),\n      lon: e.latLng.lng()\n    }));\n    var click_pos = e.latLng;\n    var click_screen = fromLatLngToPoint(click_pos, map);\n    add_drop_iw.show();\n    add_drop_iw.css({\n      \"top\": click_screen.y + 50 + \"px\",\n      \"left\": click_screen.x - add_drop_iw.width() / 2 + \"px\"\n    });\n  }\n});\nmap.addListener('bounds_changed', hideAddDropIW);\nmap.addListener('zoom_changed', hideAddDropIW);\nadd_drop_marker.addListener('click', function () {\n  if (isLogged) {\n    setSBar(\"sbar-upload\");\n    queryPlace(map_click_event);\n  } else {\n    flash(\"failure\", \"You need to be logged-in to upload a drop\");\n  }\n});\n\nfunction hideAddDropIW() {\n  add_drop_iw.hide();\n} // Listen to map zoom. Above zoom 13 convert to heatmap\n\n\nconst trigger_heatmap_zoom = 13;\nvar map_mode = \"markers\";\nmap.addListener('zoom_changed', handleZoomChanged);\n\nfunction handleZoomChanged() {\n  var zoom = map.getZoom();\n\n  if (map_mode == \"markers\" && zoom <= trigger_heatmap_zoom) {\n    // Enable heatmap\n    heatmap.setOptions({\n      data: heatmap_data,\n      map: map\n    });\n    all_markers.forEach(marker => {\n      marker.setMap(null);\n    });\n    map_mode = \"heatmap\";\n    console.log(\"mode changed: \", map_mode);\n  }\n\n  if (map_mode == \"heatmap\" && zoom > trigger_heatmap_zoom) {\n    // Disable heatmap\n    heatmap.setOptions({\n      data: heatmap_data,\n      map: null\n    });\n    all_markers.forEach(marker => {\n      marker.setMap(map);\n    });\n    setTimeout(colorMarkers, 2000);\n    map_mode = \"markers\";\n    console.log(\"mode changed: \", map_mode);\n  }\n} // Query place functions\n\n\nfunction queryPlace(e) {\n  if (e.placeId) {\n    service.getDetails({\n      placeId: e.placeId\n    }, function (place, status) {\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\n        $(\"#input-place\").val(place.name);\n      }\n    });\n  } else {\n    geocoder.geocode({\n      'location': e.latLng\n    }, function (results, status) {\n      if (status === 'OK') {\n        if (results[0]) {\n          $(\"#input-place\").val(results[0].formatted_address);\n        } else {\n          console.log('No results found');\n        }\n      } else {\n        console.log('Geocoder failed due to: ' + status);\n      }\n    });\n  }\n}\n\nfunction queryPlace2(place_id) {\n  return new Promise((resolve, reject) => {\n    service.getDetails({\n      placeId: place_id\n    }, function (place, status) {\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\n        resolve(place);\n      } else {\n        reject(\"Error query place 2\");\n      }\n    });\n  });\n} // Get drops from api via ajax\n\n\nvar all_drops = [];\nvar all_markers = [];\nvar p_drops_ajax = getDrops();\np_drops_ajax.then(drops => {\n  all_drops = drops;\n  addAllMarkers(all_drops);\n  addHeatmapData(all_drops);\n}).catch(err => console.log(err));\n\nfunction getDrops() {\n  return new Promise((resolve, reject) => {\n    $.ajax({\n      type: \"get\",\n      url: \"/api/drops\",\n      dataType: \"json\"\n    }).done(data => {\n      data = JSON.parse(data);\n\n      if (data.success && data.success == true) {\n        console.log(\"API drops: \", data);\n        resolve(data.drops);\n      } else {\n        reject();\n      }\n    }).fail(function () {\n      alert(\"failed to get drops\");\n      reject();\n    });\n  });\n}\n\nfunction filterDrops(type, reference) {\n  // all_drops always has all_drops. Just hide the one that dont match the criteria\n  console.log(\"Filter \", type, \" ref: \", reference);\n  console.log(\"All drops: \", all_drops, \" All markers: \", all_markers);\n\n  if (type == \"user\") {\n    var drops_by_user = all_drops.filter(drop => {\n      return drop.owner._id == reference._id;\n    }); // console.log(\"Found drops: \",drops_by_user)\n\n    if (drops_by_user.length != 0) {\n      var user = drops_by_user[0].owner;\n      console.log(user);\n      $(\"#query-user\").show();\n      $(\"#query-username\").html(user.username);\n      $(\".query-thumbnail\").css(\"background-image\", \"url('\" + user.info.profile_pic + \"')\"); // Set all markers invisible\n\n      all_markers.map(marker => {\n        marker.setMap(null);\n      }); // Set back to visible the ones that match drops_by_user\n\n      all_markers.forEach(marker => {\n        var matches = drops_by_user.findIndex(drop => {\n          return drop._id == marker.drop_id;\n        });\n\n        if (matches >= 0) {\n          marker.setMap(map);\n        }\n      });\n    } else {\n      console.log(\"User has no drops\");\n    }\n\n    return drops_by_user;\n  }\n\n  if (type == \"hashtag\") {\n    var hashtag = reference;\n    var drops_with_hashtag = all_drops.filter(drop => {\n      return drop.hashtag._id == hashtag._id;\n    });\n    console.log(\"Found drops: \", drops_with_hashtag);\n\n    if (drops_with_hashtag.length != 0) {\n      $(\"#query-hashtag\").show();\n      $(\"#query-hashtag-hashtag\").html(hashtag.hashtag);\n      $(\".query-thumbnail-hashtag\").css(\"background-color\", hashtag.color); // Set to invisible the ones that do not match drops_with_hashtag\n\n      all_markers.forEach(marker => {\n        var matches = drops_with_hashtag.findIndex(drop => {\n          return drop._id == marker.drop_id;\n        });\n        console.log(\"Matches: \", matches);\n\n        if (matches >= 0) {} else {\n          marker.setMap(null);\n        }\n      });\n    } else {\n      console.log(\"Hashtag has no drops\");\n    }\n\n    return drops_with_hashtag;\n  }\n} // Add markers to map\n\n\nfunction addAllMarkers(drops) {\n  for (var i = 0; i < drops.length; i++) {\n    var drop = drops[i];\n\n    if (findIfIvSeenDrop(drop._id) == true) {\n      var icon_size = new google.maps.Size(20, 20);\n    } else {\n      var icon_size = new google.maps.Size(50, 50);\n    }\n\n    all_markers[i] = new google.maps.Marker({\n      position: {\n        lat: drop.location.lat,\n        lng: drop.location.lon\n      },\n      map: map,\n      icon: {\n        url: drop.icon,\n        scaledSize: icon_size\n      },\n      optimized: false,\n      title: drop.title\n    });\n    all_markers[i].addListener('click', function () {\n      makeIW(this.drop_id); // Add drop to user's drops_seen list\n\n      if (findIfIvSeenDrop(this.drop_id) == true) {\n        console.log(\"Already seen that drop\");\n      } else {\n        console.log(\"Never seen that drop\");\n        addToDropsSeen(this.drop_id);\n      }\n\n      var icon = this.getIcon();\n      console.log(\"Marker\");\n      console.log(\"icon: \", icon);\n      icon.size.height = 30;\n      icon.size.width = 30;\n      this.setIcon(icon);\n      infowindow.open(map, this);\n      $(\".map-iw-img\").click(function () {\n        var drop = $(this).data(\"drop\");\n        var post = $(this).data(\"post\");\n        var img = $(this).data(\"img\");\n        var link = \"/drop/\" + drop + \"?post=\" + post + \"&img_num=\" + img;\n        console.log(\"Link to: \", link);\n        window.location.href = link;\n      });\n      $(\".btn-star\").click(function (e) {\n        if (USER) {\n          var btn = $(this);\n          var post_id = btn.data(\"postid\");\n          var star = btn.find(\"img\");\n          var likes = btn.next();\n          console.log(\"Clicked btn star \", e);\n\n          if (btn.data(\"like\") == 0) {\n            star.attr(\"src\", \"/icons/star-full-yellow.svg\");\n            likes.text(parseInt(likes.text()) + 1);\n            btn.data(\"like\", \"1\");\n            postLike(post_id);\n          } else {\n            star.attr(\"src\", \"/icons/star-outline.svg\");\n            likes.text(parseInt(likes.text()) - 1);\n            btn.data(\"like\", \"0\");\n            postUnlike(post_id);\n          }\n        } else {\n          flash(\"failure\", \"You need to be logged in to like\");\n        }\n      });\n      add_drop_marker.setMap(null);\n      var iwOuter = $('.gm-style-iw');\n      var iwBackground = iwOuter.prev();\n      iwBackground.children(':nth-child(4)').css({\n        \"background-color\": \"rgb(26, 123, 165, 0.7)\"\n      });\n      iwBackground.children(':nth-child(3)').children().children().css({\n        \"background-color\": \"rgb(16, 82, 110, 0.7)\"\n      });\n      hideAddDropIW();\n      setSBar('none');\n    });\n    all_markers[i].addListener('position_changed', function () {\n      console.log(\"Marker changed - \", this.drop_id);\n    });\n    all_markers[i].drop_id = drop._id;\n  } // Add color to drop thumbnails\n\n\n  setTimeout(colorMarkers, 2000);\n}\n\nfunction makeIW(drop_id) {\n  var drop_index = all_drops.findIndex(drop => {\n    return drop._id == drop_id;\n  });\n\n  if (drop_index == -1) {\n    console.log(\"Failed to find drop with id: \" + drop_id);\n    return null;\n  }\n\n  var drop = all_drops[drop_index];\n  console.log(\"IW: \", drop);\n  var post_id = drop.creation_post._id;\n  var img_num = 0;\n  var contentString = '';\n\n  if (drop.best_post == null) {\n    contentString = '<div class=\"map-iw\" data-owner=\"' + drop.owner._id + '\">' + '<div class=\"map-iw-head\">' + '<div class=\"d-flex flex-row\">' + '<div class=\"map-iw-profile-pic\">' + '<a href=\"' + \"/user/\" + drop.owner._id + '\" onclick=\"onUnload()\">' + '<div class=\"sbar-profile-img\" data-owner=\"' + drop.owner._id + '\" style=\"background-image: url(' + drop.owner.info.profile_pic + ');\"></div>' + '</a>' + '</div>' + '<div class=\"w-100 ml-2\">' + '<span class=\"map-iw-user\">' + drop.owner.username + '</span>' + '<br class=\"d-md-none\">' + '<span class=\"work-sans map-iw-time ml-2\">' + moment(drop.creation_date).fromNow() + '</span>' + '<p class=\"map-iw-tag\">#' + drop.hashtag.hashtag + '</p>' + '<p class=\"map-iw-title\">' + drop.title + '</p>' + '</div>' + '</div>' + '</div>' + '<div class=\"map-iw-body mt-2\">' + '<div class=\"map-iw-img\" data-drop=' + drop_id + ' data-post=' + post_id + ' data-img=' + img_num + ' style=\"background-image: url(' + drop.creation_post.images[0] + ');\" >' + '</div>' + '<div class=\"map-iw-footer\">' + '<div class=\"w-100 p-2 mt-1 d-flex flex-row align-items-center justify-content-between\">' + '<div>' + '<button class=\"btn-star\" data-like=0 data-postid=\"' + drop.creation_post._id + '\" > <img src=\"/icons/star-outline.svg\" width=\"25px\" alt=\"\"> </button>' + '<span class=\"ml-2\">' + drop.creation_post.likes_list.length + '</span>' + '</div>' + '<span>' + drop.posts_list.length + ' comments' + '</span>' + '<a href=\"/drop/' + drop_id + '\" onclick=\"onUnload()\" class=\"btn btn-danger btn-goto-drop\">Go to drop page..</a>';\n    '</div>' + '</div>';\n    '</div>' + '</div>';\n  } else {\n    contentString = '<div class=\"map-iw\" data-owner=\"' + drop.owner._id + '\">' + '<div class=\"map-iw-head\">' + '<div class=\"row\">' + '<div class=\"col-3\">' + '<a href=\"' + \"/user/\" + drop.owner._id + '\">' + '<div class=\"sbar-profile-img\" data-owner=\"' + drop.owner._id + '\" style=\"background-image: url(' + drop.owner.info.profile_pic + ');\"></div>' + '</a>' + '</div>' + '<div class=\"col-9\">' + '<span class=\"map-iw-user\">' + drop.owner.username + '</span>' + '<span class=\"work-sans map-iw-time ml-2\">' + moment(drop.creation_date).fromNow() + '</span>' + '<p class=\"map-iw-tag\">#' + drop.hashtag + '</p>' + '<p class=\"map-iw-title\">' + drop.title + '</p>' + '</div>' + '</div>' + '</div>' + '<p class=\"map-iw-title\">' + drop.title + '</p>' + '<div class=\"map-iw-body mt-2\">' + '<div class=\"row no-gutters\">' + '<div class=\"col-6\">' + '<a href=\"' + \"drop/\" + drop_id + '\"><img src=\"' + drop.best_post.images[0] + '\" class=\"w-100\" alt=\"\" id=\"iw-img-best\"></a>' + '</div>' + '<div class=\"col-6\">' + '<a href=\"' + \"drop/\" + drop_id + '\"><img src=\"' + drop.creation_post.images[0] + '\" class=\"w-100\" alt=\"\" id=\"iw-img-recent\"></a>' + '</div>' + '</div>' + '</div>' + '</div>';\n  }\n\n  infowindow.setContent(contentString);\n  infowindow.drop_id = drop_id;\n  return true;\n}\n\nfunction colorMarkers() {\n  var img_list = $(\".gmnoprint img\"); // console.log(\"Elements: \", img_list)\n\n  for (var i = 0; i < img_list.length; i++) {\n    var img = img_list.eq(i);\n    var src = img.attr(\"src\"); // Find the drop related to that image\n\n    var drop = all_drops.find(function (drop) {\n      return drop.icon == src;\n    });\n\n    if (drop) {\n      // console.log(\"Drop: \",drop);\n      var color = drop.hashtag.color;\n      img.parent().addClass(\"border-\" + drop._id);\n      $(\"<style type='text/css'> .border-\" + drop._id + \"{ background-color:\" + color + \"; outline: 4px solid \" + color + \"; outline-style: solid; border-radius: 10px; opacity:1 !important;} </style>\").appendTo(\"head\");\n    }\n  }\n} // Get data from drops and convert to heatmap data\n\n\nfunction addHeatmapData(drops) {\n  heatmap_data = drops.map(drop => {\n    return new google.maps.LatLng(drop.location.lat, drop.location.lon);\n  });\n  console.log(\"Heatmap data: \", heatmap_data);\n} // Handle API stuff\n\n\nfunction postLike(post_id) {\n  console.log(\"Linking\");\n\n  if (USER) {\n    $.ajax({\n      url: '/api/user/like-post',\n      dataType: 'json',\n      type: 'post',\n      contentType: 'application/json',\n      data: JSON.stringify({\n        \"post\": post_id\n      }),\n      processData: false,\n      success: function (data, textStatus, jQxhr) {\n        if (data.status != 200) {\n          console.log(\"Error \", data.status, \" \", data.error);\n          return false;\n        } else {\n          console.log(\"Success like\");\n          return true;\n        }\n      },\n      error: function (jqXhr, textStatus, errorThrown) {\n        console.log(\"Error\");\n        flash(\"failure\", \"You need to be logged in to like\");\n        console.log(JSON.stringify(textStatus), JSON.stringify(errorThrown));\n        return false;\n      }\n    });\n  }\n}\n\nfunction postUnlike(post_id) {\n  if (USER) {\n    console.log(\"Disliking\");\n    $.ajax({\n      url: '/api/user/dislike-post',\n      dataType: 'json',\n      type: 'post',\n      contentType: 'application/json',\n      data: JSON.stringify({\n        \"post\": post_id\n      }),\n      processData: false,\n      success: function (data, textStatus, jQxhr) {\n        if (data.status != 200) {\n          console.log(\"Error \", data.status, \" \", data.error);\n          return false;\n        } else {\n          console.log(\"Success unlike\");\n          return true;\n        }\n      },\n      error: function (jqXhr, textStatus, errorThrown) {\n        console.log(\"Error\");\n        flash(\"failure\", \"You need to be logged in to like\");\n        console.log(JSON.stringify(textStatus), JSON.stringify(errorThrown));\n        return false;\n      }\n    });\n  }\n}\n\nfunction addToDropsSeen(drop_id) {\n  console.log(\"Adding to drops seen\");\n\n  if (USER) {\n    $.ajax({\n      url: '/api/user/seen-drop',\n      dataType: 'json',\n      type: 'post',\n      contentType: 'application/json',\n      data: JSON.stringify({\n        \"drop\": drop_id\n      }),\n      processData: false,\n      success: function (data, textStatus, jQxhr) {\n        if (data.status != 200) {\n          console.log(\"Error \", data.status, \" \", data.error);\n          return false;\n        } else {\n          console.log(\"Success seen drop\");\n          USER.drops_seen.push(drop_id);\n          return true;\n        }\n      },\n      error: function (jqXhr, textStatus, errorThrown) {\n        console.log(\"Error\");\n        flash(\"failure\", \"You need to be logged in to have seen a drop\");\n        console.log(JSON.stringify(textStatus), JSON.stringify(errorThrown));\n        return false;\n      }\n    });\n  }\n}\n\nfunction findIfIvSeenDrop(drop_id) {\n  if (USER) {\n    var index = USER.drops_seen.findIndex(drop_seen => {\n      return drop_seen == drop_id;\n    });\n\n    if (index >= 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n} //  Sidebar\n\n\nwindow.setSBar = setSBar;\n\nfunction setSBar(sbarID) {\n  $('#navbarNav').collapse('hide');\n  var sbar = $(\"#\" + sbarID);\n\n  if (sbar.css(\"display\") == \"none\") {\n    $(\".sidebar\").removeClass(\"sbar-fadein\").hide();\n    sbar.show().addClass(\"sbar-fadein\");\n  } else {\n    $(\".sidebar\").removeClass(\"sbar-fadein\").hide();\n    sbar.hide();\n  }\n\n  if (sbarID == \"sbar-notifications\") {\n    $(\"#badge-notifications\").hide();\n    localStorage.setItem(\"notifications_read\", USER.notifications.length);\n  }\n\n  if (sbarID == \"sbar-following\") {\n    $(\"#badge-following\").hide();\n    localStorage.setItem(\"following_read\", USER.following_news.length);\n  }\n\n  return false;\n}\n\n$(\".sbar-profile-img\").click(function () {\n  var owner_id = $(this).attr(\"data-owner\");\n  console.log(\"clicked on profile img: \", owner_id);\n  var url = \"/user/\" + owner_id;\n  onUnload();\n  $(location).attr('href', url);\n});\n$(\".sbar-comment\").click(function () {\n  var h = $(this).prop('scrollHeight');\n  $(this).css(\"height\", h).css(\"max-height\", \"\");\n});\n$(\".sidebar\").hide();\n$(\".btn-collapse\").click(function () {\n  setSBar('none');\n}); // Upload new drop\n\n$(\".btn-add-drop\").click(function () {\n  $(\"#add-drop-focus\").show();\n});\n$(\"#close-drop-focus\").click(function () {\n  $(\"#add-drop-focus\").hide();\n});\n$(\"#add-drop-iw\").click(function () {\n  $(\"#add-drop-focus\").hide();\n\n  if (USER) {\n    $(\"#upload-drop-modal\").modal(\"show\");\n    console.log(\"Adding new drop\");\n  }\n}); // Upload via filestack\n\nvar ALL_UPLOADS = [];\n$(\"#sbar-form-upload-empty, #sbar-form-add-more\").click(function () {\n  console.log(\"Clicked on form upload\");\n  openPicker();\n});\n\nfunction previewUploads() {\n  $(\"#sbar-form-upload-empty\").hide();\n  $(\"#sbar-form-preview-img\").show();\n  console.log($(\"#sbar-form-preview-img\"));\n  var row_preview = $(\"#sbar-form-preview-row\");\n  var cols_preview = row_preview.children().html(\"\");\n  var j = 0;\n\n  for (var i = 0; i < ALL_UPLOADS.length; i++) {\n    var col = cols_preview.eq(j);\n    var url = ALL_UPLOADS[i];\n    var div = $(\"<div></div>\");\n    div.addClass(\"mt-2\").css(\"position\", \"relative\");\n    col.append(div);\n    div.append(\"<img src='\" + url + \"' class='w-100'>\");\n    div.append(\"<button type='button' class='btn btn-danger btn-remove-img ml-auto'>Remove</button>\");\n    j++;\n\n    if (j > 1) {\n      j = 0;\n    }\n  }\n\n  $(\".btn-remove-img\").click(function () {\n    var btn = $(this);\n    var img = btn.prev();\n    var img_url = img.attr(\"src\");\n    console.log(\"Remove img: \", img_url);\n    var index = ALL_UPLOADS.findIndex(url => {\n      return url == img_url;\n    });\n    ALL_UPLOADS.splice(index, 1);\n    previewUploads(ALL_UPLOADS);\n  });\n  $(\"#btn-add-imgs\").click(function () {\n    openPicker();\n  });\n  $(\"#input-urls\").val(JSON.stringify(ALL_UPLOADS));\n  console.log(\"All urls: \", ALL_UPLOADS);\n}\n\nvar fsClient = filestack.init('AVXbgNWER68pe9QHJmgwgz');\n\nfunction openPicker() {\n  fsClient.pick({\n    accept: 'image/*',\n    minFiles: 1,\n    maxFiles: 1,\n    maxSize: 100 * 1024 * 1024\n  }).then(response => {\n    console.log(response);\n\n    if (response.filesUploaded.length > 0) {\n      var url_list = response.filesUploaded.map(metadata => {\n        return metadata.url;\n      });\n      ALL_UPLOADS = ALL_UPLOADS.concat(url_list);\n      previewUploads(ALL_UPLOADS);\n    }\n  });\n} // Color picker\n\n\n$(\"#color-hashtag\").colorPick({\n  'allowCustomColor': true // 'palette': [\"#F44336\",\"#F06292\",\"#FF6D00\",\"#FFC107\",\"#FFFF00\",\"#AB47BC\",\"#7C4DFF\",\"#3D5AFE\",\"#0D47A1\",\"#03A9F4\",\"#4DD0E1\",\"#1DE9B6\",\"#43A047\",\"#76FF03\",\"#6D4C41\",\"#607D8B\",\"#000000\",\"#FFFFFF\"]\n\n});\n$(\"#color-hashtag\").colorPick({\n  'onColorSelected': function () {\n    console.log(\"The user has selected the color: \" + this.color);\n    $(\"#input-color\").val(this.color);\n    this.element.css({\n      'backgroundColor': this.color,\n      'color': this.color\n    });\n  }\n}); // Search\n\nfunction searchDB(val, type) {\n  return new Promise((resolve, reject) => {\n    $.ajax({\n      type: \"POST\",\n      url: \"/api/search\",\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({\n        \"search\": val,\n        type: type\n      }),\n      success: function (data, textStatus, jQxhr) {\n        if (data.status != 200) {\n          reject(\"Error \" + data.status + \" \" + data.error);\n        } else {\n          resolve(data.results);\n        }\n      },\n      error: function (jqXhr, textStatus, errorThrown) {\n        reject(\"Error - \" + errorThrown);\n      }\n    });\n  });\n} // Search hashtag\n\n\nif (USER) {\n  var src_hashtag = document.getElementById(\"src-hashtag\");\n  $(document).click(function (e) {\n    if (e.target == document.getElementById(\"src-hashtag\")) {} else {\n      $(\"#src-hashtag-drop\").hide();\n    }\n  });\n  var observable = Rx.Observable.fromEvent(src_hashtag, 'input'); // Magic\n\n  observable.map(event => event.target.value).debounceTime(500).distinctUntilChanged().subscribe({\n    next: function (value) {\n      if (value) {\n        console.log(\"Src hashtag - \", value);\n        searchDB(value, \"hashtag\").then(results => {\n          console.log(\"Got - \", results.hashtags);\n\n          if (results.hashtags) {\n            $(\"#src-drop-hashtag\").show();\n          }\n\n          renderSrcResultsHashtag(results.hashtags);\n        }).catch(reason => {\n          console.log(reason);\n        });\n      } else {\n        var src_drop = $(\"#src-hashtag-drop\");\n        src_drop.html(\"\"); // $(\"#src-noresults\").show()\n      }\n    }\n  });\n}\n\nfunction renderSrcResultsHashtag(hashtags) {\n  var src_drop = $(\"#src-drop-hashtag\");\n  src_drop.dropdown('update');\n  src_drop.html(\"\");\n\n  for (var i = 0; i < hashtags.length; i++) {\n    var hashtag = hashtags[i];\n    var link = $(\"<div></div>\").addClass(\"dropdown-item dropdown-hashtag\").attr({\n      \"data-hashtag\": JSON.stringify(hashtag)\n    });\n    var content = $(\"<div></div>\").addClass(\"d-flex flex-row align-items-center\");\n    var thumbnail = $(\"<div></div>\").addClass(\"src-thumbnail-hashtag\").css(\"background-color\", hashtag.color);\n    var title = $(\"<span></span>\").addClass(\"h5 work-sans ml-3\").html(hashtag.hashtag);\n    var drops_using = $(\"<span></span>\").addClass(\"h6 work-sans ml-3\").html(\"in \" + hashtag.drops_using.length + \" drops \");\n    link.append(content);\n    content.append(thumbnail, title, drops_using);\n    src_drop.append(link);\n  }\n\n  $(\".dropdown-hashtag\").click(function () {\n    var hashtag = $(this).data(\"hashtag\");\n    console.log(\"Selected hashtag: \", hashtag);\n    $(\"#src-hashtag\").val(hashtag.hashtag);\n    $(\"#input-color\").val(hashtag.color);\n    $(\"#color-hashtag\").css({\n      'backgroundColor': hashtag.color,\n      'color': hashtag.color\n    });\n    $(\"#src-drop-hashtag\").hide();\n  });\n} // Search all\n\n\nvar src_bar = document.getElementById(\"src-bar\");\n$(document).click(function (e) {\n  if (e.target == document.getElementById(\"src-bar\")) {} else {\n    $(\"#src-drop-all\").hide();\n  }\n});\nvar observable = Rx.Observable.fromEvent(src_bar, 'input'); // Magic\n\nobservable.map(event => event.target.value).debounceTime(500).distinctUntilChanged().subscribe({\n  next: function (value) {\n    console.log(\"Src: \", value);\n\n    if (value) {\n      // Does the query begin with a hashtag char?\n      var value_array = value.split('');\n\n      if (value_array[0] === '#') {\n        // If yes search just hashtags\n        console.log(\"has hashtag\");\n        value_array.splice(0, 1);\n        value = value_array.join('');\n        console.log(\"value: \", value);\n        searchDB(value, \"hashtag\").then(results => {\n          var hashtags = results.hashtags;\n          console.log(\"Got hashtags: \", hashtags);\n\n          if (hashtags) {\n            $(\"#src-drop-all\").show();\n          }\n\n          renderSrcResults(\"hashtag\", null, null, null, hashtags);\n        });\n      } else {\n        // If not search for users, titles, and places\n        Promise.all([searchDB(value, \"all\"), searchPlace(value)]).then(results => {\n          var users = results[0].users;\n          var drops = results[0].drops;\n          var places = results[1];\n\n          if (users || drops || places) {\n            $(\"#src-drop-all\").show();\n          }\n\n          renderSrcResults(\"all\", users, drops, places, null);\n        }).catch(reason => {\n          console.log(reason);\n        });\n      }\n    } else {\n      var src_drop = $(\"#src-drop-all\");\n      src_drop.html(\"\");\n      src_drop.hide();\n      $(\"#src-noresults\").show();\n    }\n  }\n});\n\nfunction searchPlace(val, local = true) {\n  // https://developers.google.com/maps/documentation/javascript/reference#AutocompleteService\n  return new Promise((resolve, reject) => {\n    if (local) {\n      var location = map.getCenter();\n      var radius = 20000;\n    } else {\n      var location = null;\n      var radius = null;\n    }\n\n    console.log(\"Local: \", local);\n    ac_service.getQueryPredictions({\n      input: val,\n      location: location,\n      radius: radius\n    }, function (predictions, status) {\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\n        resolve(predictions);\n      } else {\n        reject(\"Error searching place - \", status);\n      }\n    });\n  });\n}\n\nfunction renderSrcResults(type, users, drops, places, hashtags) {\n  $(\"#src-drop-all\").dropdown('update');\n  var src_drop = $(\"#src-drop-all\");\n  src_drop.html(\"\");\n\n  if (type == \"all\") {\n    // Users\n    for (var i = 0; i < users.length; i++) {\n      var user = users[i];\n      var link = $(\"<div></div>\").addClass(\"dropdown-item dropdown-user\").attr(\"data-link\", \"/user/\" + user._id);\n      var content = $(\"<div></div>\").addClass(\"d-flex flex-row align-items-center\");\n      var thumbnail = $(\"<div></div>\").addClass(\"src-thumbnail\").css(\"background-image\", \"url(\" + user.info.profile_pic + \")\");\n      var username = $(\"<span></span>\").addClass(\"h5 work-sans ml-3\").html(user.username);\n      link.append(content);\n      content.append(thumbnail, username);\n      src_drop.append(link);\n    }\n\n    if (users.length > 0 && drops.length > 0) {\n      src_drop.append($(\"<div></div>\").addClass(\"dropdown-divider\"));\n    } // Drops\n\n\n    for (var i = 0; i < drops.length; i++) {\n      var drop = drops[i];\n      var link = $(\"<div></div>\").addClass(\"dropdown-item dropdown-drop\").attr(\"data-location\", JSON.stringify(drop.location));\n      var content = $(\"<div></div>\").addClass(\"d-flex flex-row align-items-center\");\n      var thumbnail = $(\"<div></div>\").addClass(\"src-thumbnail\").css(\"background-image\", \"url(\" + drop.icon + \")\");\n      var info = $(\"<div></div>\").addClass(\"ml-3\");\n      var title = $(\"<h5></h5>\").addClass(\"work-sans\").html(drop.title);\n      var location = $(\"<p></p>\").addClass(\"h6 work-sans\").html(drop.location.name);\n      info.append(title, location);\n      content.append(thumbnail, info);\n      link.append(content);\n      src_drop.append(link);\n    }\n\n    if ((drops.length > 0 || users.length > 0) && places.length > 0) {\n      src_drop.append($(\"<div></div>\").addClass(\"dropdown-divider\"));\n    } // Places\n\n\n    for (var i = 0; i < places.length; i++) {\n      var place = places[i];\n      var link = $(\"<div></div>\").addClass(\"dropdown-item dropdown-place\").attr(\"data-placeid\", place.place_id);\n      var content = $(\"<div></div>\").addClass(\"d-flex flex-row align-items-center\");\n      var thumbnail = $(\"<img>\").attr(\"src\", \"/icons/location-picker-sm-white.svg\").css(\"width\", \"20px\").addClass(\"d-block mr-3\");\n      var location = $(\"<h5></h5>\").addClass(\"work-sans\").html(place.structured_formatting.main_text);\n      content.append(thumbnail, location);\n      link.append(content);\n      src_drop.append(link);\n    }\n\n    $(\".dropdown-user\").click(function () {\n      window.location = $(this).data(\"link\");\n    });\n    $(\".dropdown-drop\").click(function () {\n      var location = $(this).data(\"location\");\n      console.log(\"Go to \", location);\n      map.setCenter({\n        lat: location.lat,\n        lng: location.lon\n      });\n      map.setZoom(18);\n      $(\"#src-drop-all\").hide();\n    });\n    $(\".dropdown-place\").click(function () {\n      var place_id = $(this).data(\"placeid\");\n      $(\"#src-drop-all\").hide();\n      queryPlace2(place_id).then(place => {\n        var position = {\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng()\n        };\n        console.log(\"Place - \", place);\n        map.setCenter(position);\n        marker_query.setMap(map);\n        marker_query.setPosition(position);\n        infowindow_query.setContent('<strong class=\"h4\">' + place.name + '</strong><br>' + \"<span class='h5'>\" + place.types[0] + \"</span><br>\" + \"<span>\" + place.formatted_address + \"</span>\");\n        infowindow_query.open(map, marker_query);\n        var iwOuter = $('.gm-style-iw');\n        var iwBackground = iwOuter.prev();\n        iwBackground.children(':nth-child(4)').css({\n          \"background-color\": \"rgb(26, 123, 165)\"\n        });\n        iwBackground.children(':nth-child(3)').children().children().css({\n          \"background-color\": \"rgb(16, 82, 110)\"\n        });\n      });\n    });\n  }\n\n  if (type == \"hashtag\") {\n    // Hashtags\n    console.log(\"Render hashtags: \", hashtags);\n\n    for (var i = 0; i < hashtags.length; i++) {\n      var hashtag = hashtags[i];\n      var link = $(\"<div></div>\").addClass(\"dropdown-item dropdown-hashtag\").attr({\n        \"data-hashtag\": JSON.stringify(hashtag)\n      });\n      var content = $(\"<div></div>\").addClass(\"d-flex flex-row align-items-center\");\n      var thumbnail = $(\"<div></div>\").addClass(\"src-thumbnail-hashtag\").css(\"background-color\", hashtag.color);\n      var title = $(\"<span></span>\").addClass(\"h5 work-sans ml-3\").html(hashtag.hashtag);\n      var drops_using = $(\"<span></span>\").addClass(\"h6 work-sans ml-3\").html(\"in \" + hashtag.drops_using.length + \" drops \");\n      link.append(content);\n      content.append(thumbnail, title, drops_using);\n      src_drop.append(link);\n    }\n\n    $(\".dropdown-hashtag\").click(function () {\n      $(\"#src-drop-all\").hide();\n      var hashtag = $(this).data(\"hashtag\");\n      console.log(\"Selected hashtag: \", hashtag);\n      filterDrops(\"hashtag\", hashtag);\n    });\n  }\n} // Flash messages\n\n\nfunction flash(type, message) {\n  console.log(type, message);\n\n  if (type == \"success\") {\n    var div_flash = $(\"#flash-success\").show();\n    var span_flash = div_flash.find(\"span\");\n    span_flash.html(message);\n    setTimeout(() => {\n      div_flash.hide();\n    }, 2000);\n  }\n\n  if (type == \"failure\") {\n    var div_flash = $(\"#flash-failure\").show();\n    var span_flash = div_flash.find(\"span\");\n    span_flash.html(message);\n    setTimeout(() => {\n      div_flash.hide();\n    }, 4000);\n  }\n} // Save map position to localstorage before leave\n\n\n$(\"a\").click(onUnload);\n\nfunction onUnload() {\n  localStorage.setItem(\"map_position\", JSON.stringify({\n    lat: map.getCenter().lat(),\n    lng: map.getCenter().lng()\n  }));\n  localStorage.setItem(\"map_zoom\", map.getZoom());\n} // Check for anything there on load\n\n\nif (localStorage.getItem(\"map_position\")) {\n  var pos = JSON.parse(localStorage.getItem(\"map_position\"));\n  console.log(\"Set pos to - \", pos);\n  map.setCenter(pos);\n}\n\nif (localStorage.getItem(\"map_zoom\")) {\n  var zoom = localStorage.getItem(\"map_zoom\");\n  console.log(\"Zoom - \", zoom, typeof zoom);\n  map.setZoom(parseInt(zoom));\n} // Notifications count\n\n\nif (USER) {\n  console.log(\"User: \", USER);\n  var notifications = USER.notifications;\n  var following = USER.following_news;\n  var notifications_read = localStorage.getItem(\"notifications_read\");\n  var following_read = localStorage.getItem(\"following_read\");\n\n  if (!notifications_read) {\n    notifications_read = 0;\n  }\n\n  var new_notifications = notifications.length - notifications_read;\n\n  if (new_notifications > 0) {\n    $(\"#badge-notifications\").text(new_notifications);\n  } else {\n    $(\"#badge-notifications\").hide();\n  }\n\n  if (!following_read) {\n    following_read = 0;\n  }\n\n  var new_following = following.length - following_read;\n\n  if (new_following > 0) {\n    $(\"#badge-following\").text(following.length - following_read);\n  } else {\n    $(\"#badge-following\").hide();\n  }\n} // Check if there's a query\n\n\ncheckQuery();\n\nfunction checkQuery() {\n  var URLparams = new URL(window.location.href).searchParams;\n  var user_query = URLparams.get(\"user\");\n  var place_query = URLparams.get(\"place\"); // User\n\n  if (user_query) {\n    console.log(\"Query user id: \", user_query);\n    p_drops_ajax.then(drops => {\n      // Already added to all_drops and all_markers in code above\n      filterDrops(\"user\", {\n        _id: user_query\n      });\n    });\n  } else {} // Place\n\n\n  if (place_query) {\n    console.log(\"Place query: \", place_query);\n    searchPlace(place_query, false).then(predictions => {\n      // console.log(predictions[0])\n      return queryPlace2(predictions[0].place_id);\n    }).then(place => {\n      console.log(\"Place: \", place);\n      map.setCenter(place.geometry.location);\n\n      if (place.types.findIndex(el => {\n        return el == \"establishment\";\n      }) != -1) {\n        map.setZoom(18);\n      } else {\n        map.setZoom(12);\n      }\n    });\n  }\n\n  $(\".query-close\").click(function () {\n    console.log(\"Close query\");\n    $(\".query\").hide();\n    all_markers.forEach(marker => {\n      marker.setMap(map); // Add color to drop thumbnails\n\n      setTimeout(colorMarkers, 2000);\n    });\n  });\n}\n\n//# sourceURL=webpack:///./src/js/map_page.js?");

/***/ }),

/***/ "./src/scss/map_page.scss":
/*!********************************!*\
  !*** ./src/scss/map_page.scss ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/scss/map_page.scss?");

/***/ })

/******/ });